CREATE OR REPLACE VIEW ASYSTENCI (ID, NAZWISKO, PLACA, STAZ_PRACY) AS SELECT ID_PRAC, NAZWISKO, PLACA_POD, 'lat: '||FLOOR(MONTHS_BETWEEN(CURRENT_DATE, ZATRUDNIONY)/12)||', miesięcy: '|| FLOOR(MOD(MONTHS_BETWEEN(CURRENT_DATE, ZATRUDNIONY), 12)) FROM PRACOWNICY WHERE ETAT='ASYSTENT';
CREATE OR REPLACE VIEW PLACE (ID_ZESP, SREDNIA, MINIMUM, MAXIMUM, FUNDUSZ, L_PENSJI, L_DODATKOW) AS SELECT ID_ZESP, AVG(PLACA_POD+PLACA_DOD), MIN(PLACA_POD+PLACA_DOD), MAX(PLACA_POD+PLACA_DOD), SUM(PLACA_POD+PLACA_DOD), COUNT(PLACA_POD), COUNT(PLACA_DOD) FROM PRACOWNICY GROUP BY ID_ZESP;
SELECT NAZWISKO, PLACA_POD FROM PRACOWNICY NATURAL JOIN PLACE WHERE PLACA_POD<SREDNIA ORDER BY PLACA_POD;
CREATE OR REPLACE VIEW PLACE_MINIMALNE (ID_PRAC, NAZWISKO, ETAT, PLACA_POD) AS SELECT ID_PRAC, NAZWISKO, ETAT, PLACA_POD FROM PRACOWNICY WHERE PLACA_POD<700 WITH CHECK OPTION CONSTRAINT za_wysoka_placa;
UPDATE PLACE_MINIMALNE SET PLACE_MINIMALNE.PLACA_POD=1000 WHERE PLACE_MINIMALNE.NAZWISKO = 'KOSZLAJDA';
CREATE OR REPLACE VIEW PRAC_SZEF (ID_PRAC, ID_SZEFA, PRACOWNIK, ETAT, SZEF) AS SELECT ID_PRAC, (SELECT ID_PRAC FROM PRACOWNICY WHERE ID_SZEFA = ), NAZWISKO, ETAT, s.NAZWISKO FROM PRACOWNICY p LEFT JOIN PRACOWNICY s on s.ID_PRAC = p.ID_SZEFA;
UPDATE PRAC_SZEF SET PRAC_SZEF.ID_SZEFA = 130 WHERE ID_PRAC = 280;
CREATE OR REPLACE VIEW ZAROBKI (ID_PRAC, NAZWISKO, ETAT, PLACA_POD) AS SELECT

  -- POŁOWA NIE DZIAŁĄ