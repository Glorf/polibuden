DECLARE
  CURSOR kursor IS SELECT NAZWISKO, ZATRUDNIONY FROM PRACOWNICY WHERE ETAT='ASYSTENT';
  v_nazwisko PRACOWNICY.NAZWISKO%TYPE;
  v_zatrudniony PRACOWNICY.ZATRUDNIONY%TYPE;
BEGIN
  OPEN kursor;
  LOOP
    FETCH kursor INTO v_nazwisko, v_zatrudniony;
    EXIT WHEN kursor%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(v_nazwisko||' pracuje od '||v_zatrudniony);
  END LOOP;
  CLOSE kursor;
END;

DECLARE
  CURSOR najlepiej IS SELECT NAZWISKO FROM PRACOWNICY ORDER BY PLACA_POD DESC;
  nazwisko PRACOWNICY.NAZWISKO%TYPE;
BEGIN
  OPEN najlepiej;
  LOOP
    FETCH najlepiej INTO nazwisko;
    EXIT WHEN najlepiej%NOTFOUND OR najlepiej%ROWCOUNT>3;
    DBMS_OUTPUT.PUT_LINE(najlepiej%ROWCOUNT||' : '||nazwisko);
  END LOOP;
  CLOSE najlepiej;
END;

DECLARE
  CURSOR poniedzialkowi IS SELECT ID_PRAC FROM PRACOWNICY WHERE TRIM(TO_CHAR(ZATRUDNIONY, 'DAY'))='PONIEDZIAŁEK' FOR UPDATE;
BEGIN
  FOR element IN poniedzialkowi LOOP
    UPDATE PRACOWNICY SET PLACA_POD=1.2*PLACA_POD WHERE CURRENT OF poniedzialkowi;
  END LOOP;
END;

DECLARE
  CURSOR prac IS SELECT ID_PRAC, ETAT, NAZWA FROM PRACOWNICY NATURAL JOIN ZESPOLY FOR UPDATE OF ID_PRAC;
BEGIN
  FOR inst IN prac LOOP
    CASE
      WHEN inst.NAZWA='ALGORYTMY' THEN UPDATE PRACOWNICY SET PLACA_DOD=PLACA_DOD+100 WHERE CURRENT OF prac;
      WHEN inst.NAZWA='ADMINISTRACJA' THEN UPDATE PRACOWNICY SET PLACA_DOD=PLACA_DOD+150 WHERE CURRENT OF prac;
      ELSE IF inst.ETAT='STAZYSTA' THEN DELETE FROM PRACOWNICY WHERE CURRENT OF prac; END IF;
    END CASE;
  END LOOP;
END;

DECLARE
  CURSOR prac(etate VARCHAR2) IS SELECT NAZWISKO FROM PRACOWNICY WHERE ETAT=etate;
  v_etat VARCHAR2(20) := 'PROFESOR';
BEGIN
  FOR p IN prac(v_etat) LOOP
    DBMS_OUTPUT.PUT_LINE(p.NAZWISKO);
  END LOOP;
END;

DECLARE
  CURSOR etaty IS SELECT NAZWA, AVG(PLACA_POD) AS SREDNIA_PENSJA, COUNT(*) AS L_PRAC FROM PRACOWNICY LEFT JOIN ETATY ON PRACOWNICY.ETAT = ETATY.NAZWA GROUP BY NAZWA;
  CURSOR pracownicy(etate VARCHAR2) IS SELECT NAZWISKO, PLACA_POD FROM PRACOWNICY WHERE ETAT=etate;
BEGIN
  FOR etat IN etaty LOOP
    DBMS_OUTPUT.PUT_LINE('Etat: '||etat.NAZWA);
    FOR pracownik IN pracownicy(etat.NAZWA) LOOP
      DBMS_OUTPUT.PUT_LINE(pracownicy%ROWCOUNT||' '||pracownik.NAZWISKO||', pensja: '||pracownik.PLACA_POD);
    END LOOP;
    DBMS_OUTPUT.PUT_LINE('Liczba pracowników: '||etat.L_PRAC);
    DBMS_OUTPUT.PUT_LINE('Średnia pensja: '||etat.SREDNIA_PENSJA);
  END LOOP;
END;

DECLARE
  TYPE tKursor IS REF CURSOR;
  slaboTyp tKursor;
  nazwaZesp VARCHAR2(20);
  TYPE tOsoba IS RECORD(
    NAZWISKO VARCHAR2(20),
    LATA NUMBER,
    MIESIACE NUMBER
  );
  osoba tOsoba;
BEGIN
  OPEN slaboTyp FOR SELECT NAZWA FROM PRACOWNICY NATURAL JOIN ZESPOLY GROUP BY NAZWA HAVING
    SUM(MONTHS_BETWEEN(CURRENT_DATE, ZATRUDNIONY)) = (SELECT MAX(SUMY) FROM
      (SELECT SUM(MONTHS_BETWEEN(CURRENT_DATE, ZATRUDNIONY)) AS SUMY
       FROM PRACOWNICY NATURAL JOIN ZESPOLY GROUP BY NAZWA));
  FETCH slaboTyp INTO nazwaZesp;
  DBMS_OUTPUT.PUT_LINE('Zespół z najdłuższym stażem: '||nazwaZesp);
  CLOSE slaboTyp;

  OPEN slaboTyp FOR SELECT NAZWISKO, FLOOR(MONTHS_BETWEEN(CURRENT_DATE, ZATRUDNIONY)/12) AS LATA,
                      MOD(FLOOR(MONTHS_BETWEEN(CURRENT_DATE, ZATRUDNIONY)), 12) AS MIESIACE FROM PRACOWNICY
                        WHERE ID_ZESP=(SELECT ID_ZESP FROM ZESPOLY WHERE NAZWA=nazwaZesp);
  LOOP
    FETCH slaboTyp INTO osoba;
    EXIT WHEN slaboTyp%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(osoba.NAZWISKO||', staż: lat: '||osoba.LATA||', miesięcy: '||osoba.MIESIACE);
  END LOOP;
  CLOSE slaboTyp;
END;

-- NIE UMIEM OSTATNIEGO BO DATAGRIP CRASHUJE